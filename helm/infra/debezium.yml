apiVersion: debezium.io/v1alpha1
kind: DebeziumServer
metadata:
  name: debezium
  namespace: myapp
  labels:
    name: debezium
    app: myapp
    type: infra
spec:
  version: 3.0.1.Final
  quarkus:
    config:
      # https://debezium.io/blog/2023/10/19/Debezium-Operator-Takes-off-to-the-Clouds/
      # The quarkus part of the spec provides Debezium Server with access to the previously deployed postgresql-credentials secret containing the credentials to our database. You can see the POSTGRES_USER and other variables referenced later on in the configuration.
      log.console.json: false
      kubernetes-config.enabled: true
      kubernetes-config.secrets: debezium-secret
  format:
    value:
      type: json
    key:
      type: json
  sink:
    type: rabbitmq
    config:
      connection.host: rabbitmq
      connection.port: 5672
      connection.username: ${RABBITMQ_USER}
      connection.password: ${RABBITMQ_PASSWORD}
      ackTimeout: 3000
      exchange: users
      routingKey: users
  source:
    class: io.debezium.connector.postgresql.PostgresConnector
    offset:
      redis:
        address: redis:6379
        user: default
        password: ${REDIS_PASSWORD}
        key: metadata:debezium:offsets
        sslEnabled: false
    config:
      plugin.name: pgoutput
      table.include.list: keycloak.user_entity,keycloak.federated_identity,keycloak.user_group_membership,keycloak.keycloak_group,keycloak.realm
      database.hostname: postgres
      database.port: 5432
      database.user: postgres
      database.password: ${PG_PASSWORD}
      database.dbname: postgres # TODO:
      topic.prefix: users
