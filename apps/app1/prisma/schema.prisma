// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  role       Role
  orders     Order[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Order {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product    InventoryItem @relation(fields: [productId], references: [id])
  productId  String @db.Uuid
  quantity   Int
  totalCost  Decimal @db.Money
  status     OrderStatus
  approver   User? @relation(fields: [approverId], references: [id])
  approverId String? @db.Uuid
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model InventoryItem {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  cost       Decimal @db.Money
  quantity   Int
  orders     Order[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

enum Role {
  USER
  MANAGER
}

enum OrderStatus {
  WAITING_FOR_APPROVAL
  REJECTED
  APPROVED
}