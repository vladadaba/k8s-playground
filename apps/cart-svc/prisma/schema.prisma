// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CartItemChange {
  id        String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cart      Cart          @relation(fields: [cartId], references: [id])
  cartId    String        @map("cart_id") @db.Uuid
  product   InventoryItem @relation(fields: [productId], references: [id])
  productId String        @map("product_id") @db.Uuid
  quantity  Int
  createdAt DateTime      @default(now()) @map("created_at")

  @@index([cartId])
  @@map("cart_item_change")
}

model Cart {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId          String           @map("user_id")
  cartItemChanges CartItemChange[]
  createdAt       DateTime         @default(now()) @map("created_at")
  completedAt     DateTime?        @map("completed_at")

  @@index([userId])
  @@map("cart")
}

// materialized view from inventory-svc
model InventoryItem {
  id       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String
  cost     Decimal @db.Money
  quantity Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  cartItemChanges CartItemChange[]
  @@map("inventory_item")
}
