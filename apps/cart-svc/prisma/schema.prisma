// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CartQuantityChange {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cart           Cart          @relation(fields: [cartId], references: [id])
  cartId         String
  product        InventoryItem @relation(fields: [productId], references: [id])
  productId      String
  quantityChange Int
  createdAt      DateTime      @default(now())

  @@index([cartId])
}

model CartItem {
  cart      Cart          @relation(fields: [cartId], references: [id])
  cartId    String        @db.Uuid
  product   InventoryItem @relation(fields: [productId], references: [id])
  productId String        @db.Uuid
  quantity  Int
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@id([cartId, productId])
}

model Cart {
  id                  String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId              String
  products            CartItem[]
  cartQuantityChanges CartQuantityChange[]
  createdAt           DateTime             @default(now())

  @@index([userId])
}

// materialized view from inventory-svc
model InventoryItem {
  id       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String
  cost     Decimal @db.Money
  quantity Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cartQuantityChanges CartQuantityChange[]
  CartItem            CartItem[]
}
