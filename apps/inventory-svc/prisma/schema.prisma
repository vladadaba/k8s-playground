// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// materialized view from inventory-svc
model InventoryItem {
  id                          String                        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  item                        InventoryItemDetails[]
  InventoryItemQuantityChange InventoryItemQuantityChange[]
  createdAt                   DateTime                      @default(now()) @map("created_at")
  updatedAt                   DateTime                      @updatedAt @map("updated_at")

  @@map("inventory_item")
}

model InventoryItemDetails {
  id        String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product   InventoryItem @relation(fields: [productId], references: [id])
  productId String        @map("product_id") @db.Uuid
  name      String
  cost      Decimal       @db.Money
  createdAt DateTime      @default(now()) @map("created_at")

  @@index([productId])
  @@map("inventory_item_details")
}

model InventoryItemQuantityChange {
  id             String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product        InventoryItem          @relation(fields: [productId], references: [id])
  productId      String                 @map("product_id") @db.Uuid
  type           InventoryItemEventType
  quantityChange Int                    @map("quantity_change")
  createdAt      DateTime               @default(now()) @map("created_at")

  @@map("inventory_item_quantity_change")
}

enum InventoryItemEventType {
  ORDER_APPROVED
  ORDER_CANCELED
  RESTOCK
}

model Outbox {
  id            String   @id @default(uuid()) // UUID primary key
  
  // Type of entity (this will kafka topic name)
  // "transforms.outbox.route.by.field": "aggregate_type",
  // "transforms.outbox.route.topic.replacement": "${routedByValue}",
  aggregateType String   @map("aggregate_type")
  aggregateId   String   @map("aggregate_id") // UUID of the entity that generated the event
  operation     String
  payload       Json // Event data as JSON
  createdAt     DateTime @default(now()) @map("created_at") // Timestamp of event creation

  @@map("outbox")
}