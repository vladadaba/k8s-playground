services:
  traefik:
    image: "traefik:v3.1"
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false" # have to put traefik.enabled=true explicitly
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080" # traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  redis:
    image: "redis:6.2-alpine"
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/infra/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ./volumes/data/infra/redis:/data

  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    ports:
      - 8080:8080
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_SCHEMA: keycloak
      KC_DB_URL: jdbc:postgresql://postgres:5432/postgres
      KC_DB_USERNAME: ${DB_USER}
      KC_DB_PASSWORD: ${DB_PASSWORD}
      KC_HOSTNAME: http://myapp.localhost:8080
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    depends_on:
      - postgres

  postgres:
    image: postgres:16.4-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    command: "--wal_level=logical"
    volumes:
      - ./volumes/data/postgres:/var/lib/postgresql/data
      - ./volumes/infra/postgres:/docker-entrypoint-initdb.d:ro

  kafka:
    image: "confluentinc/cp-kafka:7.7.1"
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      CLUSTER_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - ./volumes/data/kafka:/var/lib/kafka/data

  connect:
    image: debezium/connect:3.0.0.Final
    depends_on:
      - kafka
      - postgres
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
      PLUGIN_PATH: /kafka/connect
    ports:
      - "8083:8083"
    volumes:
      - ./volumes/infra/debezium:/scripts
    command:
      - bash
      - -c
      - |
        /scripts/register-connectors.sh connect 8083 &
        /docker-entrypoint.sh start

networks:
  default:
    name: k8s_playground_network
    driver: bridge
    external: true
