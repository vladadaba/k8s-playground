apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-configmap
  labels:
    name: rabbitmq-configmap
    app: myapp
    type: infra
# generated using `kubectl create configmap --dry-run=client somename --from-file=./volumes/infra/rabbitmq --output yaml`
# TODO: use Helm to generate this
data:
  definitions.json: |
    {
      "rabbit_version": "3.9.29",
      "rabbitmq_version": "3.9.29",
      "product_name": "RabbitMQ",
      "product_version": "3.9.29",
      "users": [
        {
          "name": "demo",
          "password_hash": "dgdUd83e5iPdsiN8t+WpKNlqv0eaC79EK9Pq/gzlp0G4VAfZ",
          "hashing_algorithm": "rabbit_password_hashing_sha256",
          "tags": ["administrator"],
          "limits": {}
        }
      ],
      "vhosts": [{ "name": "/" }],
      "permissions": [
        {
          "user": "demo",
          "vhost": "/",
          "configure": ".*",
          "write": ".*",
          "read": ".*"
        }
      ],
      "topic_permissions": [],
      "parameters": [],
      "policies": [],
      "queues": [
        {
          "name": "users",
          "vhost": "/",
          "durable": true,
          "auto_delete": false,
          "arguments": { "x-queue-type": "classic" }
        }
      ],
      "exchanges": [
        {
          "name": "users",
          "vhost": "/",
          "type": "direct",
          "durable": true,
          "auto_delete": false,
          "internal": false,
          "arguments": {}
        }
      ],
      "bindings": [
        {
          "source": "users",
          "vhost": "/",
          "destination": "users",
          "destination_type": "queue",
          "routing_key": "users",
          "arguments": {}
        }
      ]
    }
  rabbitmq.conf: |
    management.load_definitions = /etc/rabbitmq/definitions.json
