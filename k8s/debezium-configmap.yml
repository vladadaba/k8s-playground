apiVersion: v1
kind: ConfigMap
metadata:
  name: debezium-configmap
  labels:
    name: debezium-configmap
    app: myapp
    type: infra
# generated using `kubectl create configmap --dry-run=client somename --from-file=./volumes/infra/debezium --output yaml`
# TODO: use Helm to generate this
data:
  application.yaml: |
    debezium:
      sink:
        type: rabbitmq
        rabbitmq:
          connection:
            host: rabbitmq
            port: 5672
            username: demo
            password: demo
          ackTimeout: 3000
          exchange: users
          routingKey: users
      source:
        connector:
          class: io.debezium.connector.postgresql.PostgresConnector
        plugin:
          name: pgoutput
        # schema:
        #   include:
        #     list:
        #       - public # TODO: maybe change this to keycloak
        table:
          include:
            list:
              - public.user_entity
              - public.federated_identity
              - public.user_group_membership
              - public.keycloak_group
              - public.realm
        offset:
          storage:
            file:
              filename: data/offsets.dat
          flush:
            interval:
              ms: 0
        database:
          hostname: postgres
          port: 5432
          user: postgres
          password: postgres
          dbname: keycloak
        topic:
          prefix: users
      format:
        key: json
        value: json
    quarkus:
      log:
        console:
          json: false
